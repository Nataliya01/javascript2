HW 1

function myBlend(arr) {
    for (let i = arr.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [arr[i], arr[j]] = [arr[j], arr[i]]; 
    }
}

const arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];
myBlend(arr);
console.log(arr);



function myBlend(arr) {
    for (let i = 0; i < arr.length; i++) {
        const j = Math.floor(Math.random() * arr.length);
        [arr[i], arr[j]] = [arr[j], arr[i]]; 
    }
}

const arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];
myBlend(arr);
console.log(arr);


function myBlend(arr, iterations) {
    for (let i = 0; i < iterations; i++) {
        const index1 = Math.floor(Math.random() * arr.length);
        const index2 = Math.floor(Math.random() * arr.length);
        [arr[index1], arr[index2]] = [arr[index2], arr[index1]];
    }
}

let arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];
myBlend(arr, 5); 
console.log(arr);


HW 2

const company = {
    name: 'Big Company',
    type:'Main company',
    platform: 'Ticket selling platform',
    sellsSolution: 'Ticket selling solution',
    clients: [
        {
            name: 'Client 1',
            type: 'subCompany',
            uses: 'Software for ticket selling',
            sells: 'Ticket selling solution',
            partners: [
                {
                    name: 'Client 1.1',
                    type: 'subSubCompany',
                    uses: 'Ticket selling solution',
                    sells: 'Ticket selling solution',
                },
                {
                    name: 'Client 1.2',
                    type: 'subSubCompany',
                    uses: 'Ticket selling solution',
                    sells: 'Ticket selling solution',
                    partners: [
                        {
                            name: 'Client 1.2.3',
                            type: 'subSubCompany',
                            uses: 'Ticket selling solution',
                            sells: 'Ticket selling solution',
                        }
                    ]
                }
            ]
        },
        {
            name: 'Client 2',
            type: 'subCompany',
            uses: 'Software for ticket selling',
            sells: 'Ticket selling solution'
        }
    ]
};

function findValueByKey(companyName, obj) {
    if (!obj) {
        return false; 
    }

    if (obj.name === companyName) {
        console.log("Company information:", obj);
        return true; 
    }

    if (obj.clients) {
        for (let client of obj.clients) {
            if (findValueByKey(companyName, client)) {
                return true; 
            }
        }
    }

    if (obj.partners) {
        for (let partner of obj.partners) {
            if (findValueByKey(companyName, partner)) {
                return true; 
            }
        }
    }

    return false; 
}


findValueByKey('Client 1', company);

findValueByKey('Client 1.1', company);

findValueByKey('Client 1.2', company);

findValueByKey('Client 1.2.3', company);

findValueByKey('Client 2', company);





function findValueByKey(companyName, obj) {
    if (!obj) {
        return false;
    }

    if (obj.name === companyName) {
        return obj;
    }

    if (obj.clients) {
        for (let client of obj.clients) {
            const result = findValueByKey(companyName, client);
            if (result) {
                return result;
            }
        }
    }

    if (obj.partners) {
        for (let partner of obj.partners) {
            const result = findValueByKey(companyName, partner);
            if (result) {
                return result;
            }
        }
    }

    return false;
}


const foundCompany = findValueByKey('Client 1', company);
if (foundCompany) {
    console.log("Company information:", foundCompany);
} else {
    console.log("Company not found.");
}